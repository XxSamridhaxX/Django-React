username: abcd1234
email: abcd1234@gmail.com
password: abcd1234



after putting LOGIN.as_view() we should also put LOGOUT_REDIRECT_URL = 'login' in settings.py
that tells django about where to redirect after successful login.


API post:
The POST endpoint in our API allows authenticated users to create new Person entries. When a user sends a POST request to this endpoint, they must include data such as the person's name, email, and phone number in the request body, formatted as JSON. This data is captured using Django REST Framework's request.data object.

To process this incoming data, we use the PersonSerializer, which validates the input based on the rules defined in our model. For example, it checks whether all required fields are present and if the email is in a proper format. If the data passes validation, the serializer proceeds to save the new Person object to the database.

A crucial step here is associating the newly created Person with the currently logged-in user. We do this explicitly by passing user=request.user to the serializer.save() method. This ensures that every person record is linked to the user who created it, making it possible to later filter and retrieve data user-wise.

If the object is successfully created, the API responds with a JSON representation of the new person along with a 201 Created status code. However, if validation fails, it returns a clear explanation of what went wrong (like missing fields or invalid formats) with a 400 Bad Request status.

This setup allows users to manage their own directory of contacts while ensuring data integrity and secure user association in the backend.


day5:(6/9/2025) starting authtication token